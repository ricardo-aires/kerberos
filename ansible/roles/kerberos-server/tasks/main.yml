---
# tasks file for kerberos server role
- name: ensure kerberos packages are installed
  yum:
    name: "{{ kerberos_server_packages }}"
    state: present

- name: ensure krb5.conf file is setup accordingly
  template:
    src: krb5.conf.j2
    dest: /etc/krb5.conf
    owner: root
    group: root
    mode: 0644
  notify: restart kerberos service

- name: ensure the kerberos database is created
  command: "/usr/sbin/kdb5_util create -s -P {{ kerberos_server_master_pw }}"
  register: create_krb_db
  failed_when: "create_krb_db.rc != 0 and 'File exists' not in create_krb_db.stderr"
  changed_when: "create_krb_db.rc == 0"

- name: ensure the kerberos acl file is setup accordingly
  template:
    src: kadm5.acl.j2
    dest: /var/kerberos/krb5kdc/kadm5.acl
    owner: root
    group: root
    mode: 0644
  notify: restart kerberos service

- name: ensure the kdc admin principal is created
  command: "kadmin.local -q 'addprinc -pw {{ kerberos_server_admin.pw }} {{ kerberos_server_admin.princ }}'"
  register: set_admin
  failed_when: "set_admin.rc != 0 and 'already exists' not in set_admin.stderr"
  changed_when : "set_admin.rc == 0 and 'already exists' not in set_admin.stderr"
  notify: restart kerberos service

- name: Force all notified handlers to run at this point
  meta: flush_handlers

- name: ensure the kerberos services are enabled and started
  service: 
    name: "{{ item }}"
    state: started
    enabled: yes
    daemon_reload: yes
  with_items:
    - krb5kdc
    - kadmin

- name: ensure users principals are created
  command: "kadmin.local -q 'addprinc -pw {{ item.pw }} {{ item.name }}'"
  register: set_admin
  failed_when: "set_admin.rc != 0 and 'already exists' not in set_admin.stderr"
  changed_when : "set_admin.rc == 0 and 'already exists' not in set_admin.stderr"
  loop: "{{ kerberos_server_user_princ }}"